#pragma checksum "C:\Users\user\Downloads\ITG\ITG\Views\Home\menu3.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f8541c98efe1557ee1d652eb3c4471fd06efada0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_menu3), @"mvc.1.0.view", @"/Views/Home/menu3.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\user\Downloads\ITG\ITG\Views\_ViewImports.cshtml"
using ITG;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\user\Downloads\ITG\ITG\Views\_ViewImports.cshtml"
using ITG.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f8541c98efe1557ee1d652eb3c4471fd06efada0", @"/Views/Home/menu3.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f03ef05c6c8a1b8188b78e9d9276d321d15d6aed", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_menu3 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/style.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\user\Downloads\ITG\ITG\Views\Home\menu3.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f8541c98efe1557ee1d652eb3c4471fd06efada03992", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f8541c98efe1557ee1d652eb3c4471fd06efada05114", async() => {
                WriteLiteral(@"

    <div id=""wrapper"">
        <div id=""content"">
            <div id=""menu"">
                <h2>ETP</h2>
                <ul>
                    <li><a href=""menu.html"">Company_list.php</a></li>
                    <li><a href=""menu2.html"">Procedures.php</a></li>
                    <li><a href=""menu3.html"">Company.php</a></li>
                    <li><a href=""menu4.html"">Protocols_list.php</a></li>
                    <li><a href=""menu5.html"">Protocols.php</a></li>
                </ul>

                <h2>Go To... </h2>
                <ul>
                    <li><a href=""menu6.html"">Home</a></li>
                    <li><a href=""menu7.html"">Active</a></li>
                    <li><a href=""menu8.html"">Link 3</a></li>
                    <li><a href=""menu9.html"">Link 4</a></li>
                    <li><a href=""menu10.html"">Link 5</a></li>
                </ul>
            </div>

            <div id=""maincontent"">
                Сведения о конкретной организации

          ");
                WriteLiteral(@"      Можно получить сведения о конкретной организации в виде электронного документа – XML-файла, по запросу HTTP GET одного из двух видов:
                <p>
                    <div class=""gray"">1) https://etp.gpb.ru/api/company.php?id=849</div>
                    Параметры запроса (включаются в адресную строку):
                    <ul>
                        <li>id – задается id организации;</li>

                    </ul>
                    <div class=""gray"">2) https://etp.gpb.ru/api/company.php?inn=7744001497&kpp=997950001</div>
                    Параметры запроса (включаются в адресную строку):
                    <ul>
                        <li>inn – задается инн организации;</li>
                        <li>kpp – задается кпп организации;</li>
                    </ul>
                </p>

                Описание возвращаемых параметров:
                <table>
                    <tr>
                        <td>Организация</td>
                        <td>Наименование п");
                WriteLiteral(@"оля</td>
                        <td>Описание</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>id</td>
                        <td>
                            идентификатор организации в системе ЭТП
                            ГПБ (внутренний)
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>inn </td>
                        <td>
                            ИНН
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>kpp</td>
                        <td>КПП</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>ogrn</td>
                        <td>ОГРН</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>ful");
                WriteLiteral(@"l_name</td>
                        <td>полное наименование организации</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>short_name</td>
                        <td>
                            сокращенное наименование организации
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>phone</td>
                        <td>
                            контактный телефон
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>fax</td>
                        <td>факс</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>email</td>
                        <td>контактный e-mail</td>
                    </tr>
                    <tr>
                        <td></td>
               ");
                WriteLiteral(@"         <td>addr_main</td>
                        <td>юридический адрес</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>addr_post</td>
                        <td>почтовый адрес</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>accreditation</td>
                        <td>
                            дата аккредитации. Аттрибут type
                            определяет тип аккредитации: «customer»,
                            «supplier»
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>date_last_update</td>
                        <td>
                            дата последнего изменения данных
                            организации
                        </td>
                    </tr>
                    <tr>
                        <td></td>
  ");
                WriteLiteral(@"                      <td>region</td>
                        <td>регион организации</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>profile</td>
                        <td>
                            название профиля. Аттрибут type
                            определяет тип профиля: «customer» или
                            «supplier»
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>acct_kor</td>
                        <td>
                            номер коррепондентского счета
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>bik</td>
                        <td>БИК банка</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>bank</td>
                        ");
                WriteLiteral(@"<td>наименование банка</td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>bank_addr</td>
                        <td>
                            адрес банка
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>files</td>
                        <td>
                            документы организации, может быть
                            множественным
                        </td>
                    </tr>
                    <tr>
                        <td>files</td>
                        <td></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>file</td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>file</td>
                        <td></td>
              ");
                WriteLiteral(@"          <td></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>customer</td>
                        <td>
                            документы организации аккредитованной в
                            качестве заказчика
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>supplier</td>
                        <td>
                            документы организации аккредитованной в
                            качестве заявителя
                        </td>
                    </tr>
                </table>


                <p> Описание атрибутов документов организации: </p>
                <ul>
                    <li>Атрибут Descr – описание документа;</li>
             ");
                WriteLiteral("       <li>Атрибут Date – дата добавления документа в систему;</li>\r\n                    <li>Атрибут HASH – хэш код файла.</li>\r\n                </ul>\r\n                <div class=\"text-center\"><input type=\"submit\" value=\"Попробовать Пример\"");
                BeginWriteAttribute("onclick", " onclick=\"", 8537, "\"", 8596, 3);
                WriteAttributeValue("", 8547, "location.href=\'", 8547, 15, true);
#nullable restore
#line 229 "C:\Users\user\Downloads\ITG\ITG\Views\Home\menu3.cshtml"
WriteAttributeValue("", 8562, Url.Action("GetApiMenu", "Home"), 8562, 33, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 8595, "\'", 8595, 1, true);
                EndWriteAttribute();
                WriteLiteral(" /></div>\r\n                <p></p>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
